{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gjaischool\\\\Desktop\\\\ddgr\\\\gitTestApp\\\\ddrg\\\\src\\\\pages\\\\Book.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { parseCSV } from '../etc/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Book = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  useEffect(() => {\n    // CSV 파일 불러오기\n    const fetchCSV = async () => {\n      try {\n        const response = await fetch('../etc/all.csv');\n        const csvData = await response.text();\n        const parsedData = await parseCSV(csvData);\n        setBooks(parsedData);\n      } catch (error) {\n        console.error('Error fetching CSV:', error);\n      }\n    };\n    fetchCSV();\n  }, []);\n\n  // 랜덤으로 6권의 책 선택하기\n  const randomBooks = [];\n  let num = 0;\n  while (randomBooks.length < 6) {\n    const randomIndex = Math.floor(Math.random() * books.length);\n    if (!randomBooks.includes(books[randomIndex])) {\n      randomBooks.push(books[randomIndex]);\n    }\n    console.log(num++);\n  }\n  console.log(randomBooks);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Book, \"ww1JAI05mMsgubm5EIyBKqdj5S0=\");\n_c = Book;\nexport default Book;\nvar _c;\n$RefreshReg$(_c, \"Book\");","map":{"version":3,"names":["React","useEffect","useState","parseCSV","jsxDEV","_jsxDEV","Book","_s","books","setBooks","fetchCSV","response","fetch","csvData","text","parsedData","error","console","randomBooks","num","length","randomIndex","Math","floor","random","includes","push","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gjaischool/Desktop/ddgr/gitTestApp/ddrg/src/pages/Book.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { parseCSV } from '../etc/utils';\r\n\r\nconst Book = () => {\r\n  const [books, setBooks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // CSV 파일 불러오기\r\n    const fetchCSV = async () => {\r\n      try {\r\n        const response = await fetch('../etc/all.csv');\r\n        const csvData = await response.text();\r\n        const parsedData = await parseCSV(csvData);\r\n        setBooks(parsedData);\r\n      } catch (error) {\r\n        console.error('Error fetching CSV:', error);\r\n      }\r\n    };\r\n\r\n    fetchCSV();\r\n  }, []);\r\n\r\n  // 랜덤으로 6권의 책 선택하기\r\n  const randomBooks = [];\r\n  let num = 0;\r\n  while (randomBooks.length < 6) {\r\n    const randomIndex = Math.floor(Math.random() * books.length);\r\n    if (!randomBooks.includes(books[randomIndex])) {\r\n      randomBooks.push(books[randomIndex]);\r\n    }\r\n    console.log(num++);\r\n  }\r\n  \r\n\r\n  console.log(randomBooks);\r\n\r\n  return (\r\n    <div>\r\n      {/* 랜덤으로 선택된 책 목록 출력 */}\r\n      {/* <ul>\r\n        {randomBooks.map((book) => (\r\n          <li key={book.id}>\r\n            <div>Title: {book.title}</div>\r\n            <div>Author: {book.author}</div>\r\n            <img src={book.imagePath} alt={book.title} />\r\n          </li>\r\n        ))}\r\n      </ul> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Book;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAgB,CAAC;QAC9C,MAAMC,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACrC,MAAMC,UAAU,GAAG,MAAMZ,QAAQ,CAACU,OAAO,CAAC;QAC1CJ,QAAQ,CAACM,UAAU,CAAC;MACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;IACF,CAAC;IAEDN,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,WAAW,GAAG,EAAE;EACtB,IAAIC,GAAG,GAAG,CAAC;EACX,OAAOD,WAAW,CAACE,MAAM,GAAG,CAAC,EAAE;IAC7B,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGhB,KAAK,CAACY,MAAM,CAAC;IAC5D,IAAI,CAACF,WAAW,CAACO,QAAQ,CAACjB,KAAK,CAACa,WAAW,CAAC,CAAC,EAAE;MAC7CH,WAAW,CAACQ,IAAI,CAAClB,KAAK,CAACa,WAAW,CAAC,CAAC;IACtC;IACAJ,OAAO,CAACU,GAAG,CAACR,GAAG,EAAE,CAAC;EACpB;EAGAF,OAAO,CAACU,GAAG,CAACT,WAAW,CAAC;EAExB,oBACEb,OAAA;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAWK,CAAC;AAEV,CAAC;AAACxB,EAAA,CA/CID,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AAiDV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}